import os
import nltk

def extract_np(present):
    for subtree in present.subtrees():
        if subtree.label() == 'NP' or 'PP':
            yield ' '.join(word for word , tag in subtree.leaves())

grammar = ('''
    NP: {<JJ>*<JJS>*<JJR>*<NN>*<NNS>*<NNPS>*<NNP>*} # NP
    PP: {<NP>*<IN>+<NP>*} # PP
    ''') # defining grammar for NP
cp = nltk.RegexpParser(grammar)
sen = "loss of hair , hair loss"
token = nltk.word_tokenize(sen)
tagged = nltk.pos_tag(token)
parsed_sent = cp.parse(tagged)
print(extract_np(parsed_sent))
